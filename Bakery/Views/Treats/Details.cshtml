@{
  Layout = "_Treats";
}
@using Bakery.Models
@model Bakery.Models.Treat;

<h2>Treat Overview</h2>
<hr />
<h3 style="text-transform: capitalize;font-size: 40px;">@Html.DisplayFor(model => model.TreatName)</h3>
<h3>@Html.Label("Ingredients"): @Html.DisplayFor(model => model.Ingredients)</h3>
<h3>@Html.Label("Rating"): @Html.DisplayFor(model => model.StarRating)</h3>

@if(@Model.JoinEntries.Count == 0)
{
  <p>This Treat is currently not assigned to any Flavors.</p>
}
else
{
  <h4><u>Flavors for @Html.DisplayFor(model => model.TreatName)</u></h4>
    @foreach(var join in Model.JoinEntries)
    {
      <li style="text-transform: capitalize;">@join.Flavor.FlavorName</li>
      @using (Html.BeginForm("Delete Flavor", "Treats"))
      {
        @Html.Hidden("joinId", @join.FlavorTreatId)
        <input type="submit" value="Delete"/>
      } 
    }
}
<hr />
<p>@Html.ActionLink("Edit Treat Information", "Edit", new { id = Model.TreatId })
<p>@Html.ActionLink("Delete Treat", "Delete", new { id = Model.TreatId })</p>
<p>@Html.ActionLink("Add a Flavor", "AddFlavor", new { id = Model.TreatId })</p>
<p>@Html.ActionLink("Home", "Index", "Home")</p>